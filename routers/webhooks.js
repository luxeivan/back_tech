const express = require("express");
const router = express.Router();
const { broadcast } = require("../services/sse");

router.all("/", (req, res) => {
  try {
    const method = req.method.toUpperCase();

    if (method === "GET" || method === "HEAD") {
      console.log("üîç –í–µ–±—Ö—É–∫: –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ (", method, ")");
      return res.status(200).json({ message: "–≠–Ω–¥–ø–æ–∏–Ω—Ç –≤–µ–±—Ö—É–∫–∞ –¥–æ—Å—Ç—É–ø–µ–Ω" });
    }

    if (method === "POST") {
      const payload = req.body;
      console.log("üì¨ –í–µ–±—Ö—É–∫: –ø–æ–ª—É—á–µ–Ω POST –æ—Ç Strapi");
      console.log("üì¶ –ü–æ–ª–µ–∑–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞:", JSON.stringify(payload, null, 2));

      const uidOrModel = String(payload?.uid || payload?.model || "");
      const looksLikeTN =
        uidOrModel.includes("teh-narusheniya") || uidOrModel.includes("tn");

      if (!looksLikeTN) {
        console.log("‚ö†Ô∏è –í–µ–±—Ö—É–∫: —ç—Ç–æ –Ω–µ –¢–ù, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
        return res.json({ skipped: true });
      }

      console.log("‚úîÔ∏è –¢–ù —Å–æ–±—ã—Ç–∏–µ:", payload?.event);

      broadcast({
        type: "strapi-webhook",
        event: payload?.event,
        uid: payload?.uid,
        model: payload?.model,
        entry: payload?.entry,
        timestamp: Date.now(),
      });

      return res.json({ message: "–í–µ–±—Ö—É–∫ –ø—Ä–∏–Ω—è—Ç" });
    }

    // –ù–∞ –≤—Å—è–∫–∏–π ‚Äî –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∑–∞–≤–µ—Ä—à–∞–µ–º 204
    return res.sendStatus(204);
  } catch (e) {
    console.error("‚ùóÔ∏è –í–µ–±—Ö—É–∫: –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:", e);
    return res.status(500).json({ error: "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞" });
  }
});

module.exports = router;